#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>

/*
数据结构在学什么？
如何用程序代码将现实世界的问题信息化
如何用计算机高效地处理这些信息从而创造价值

数据：计算机加工处理的对象
数据元素：组成数据的成分数据，构成数据的基本元素
数据结构：数据结构是由数据元素按照某种逻辑关系组织起来的
数据对象：具有相同性质的数据元素的结合，是数据的一个子集
数据项：一个数据元素由多个数据项构成，数据项是构成数据元素的不可分割的最小单位

例如，数据对象是全国海底捞门店的排队顾客信息
数据结构就是某个特定海底捞门店的排队顾客信息以及这些信息之间的关系
*/


/*
第一章 绪论
1. 算法的基本概念
算法（Algorithm）是对特定问题求解步骤的一种描述，它是指令的优先序列，其中每一条指令表示一个或者多个操作。

算法具有以下五种特征：有穷性 确定性 可行性 输入 输出 
注意：当一个算法被直接使用计算机程序设计语言描述时，该算法就自动成为程序。算法必须是有穷的，但程序可以是无穷的。
对操作系统来说，操作系统是一个程序但不是一个算法，它不具有有穷性。

衡量一个算法好坏的标准： 正确性 简明性 健壮性 效率

2. 数据结构的基本概念
数据结构是相互之间存在一种或者多种特定关系的数据元素的集合。
数据结构的三要素：逻辑结构、存储结构（物理结构）、数据的运算

逻辑结构的四种基本形式： 
集合结构 （数据元素同属一个集合，无其他关系）
线性结构 （数据元素之间都是一对一的关系，除第一个元素外，所有元素都有唯一直接前驱，除最后一个元素外，所有元素都有唯一直接后继）
树形结构 （数据元素之间是一对多的关系）
图状结构（网状结构）（数据元素之间是多对多的关系）

存储结构的四种基本形式：
顺序存储 （把逻辑上相邻的元素存储在物理位置上也相邻的存储单元中，数据元素之间的关系通过存储单元的邻接关系来体现）
链式存储 （逻辑上相邻的元素在物理位置上可以不相邻，通过元素存储地址的指针来表示元素之间的逻辑关系）
索引存储 （在存储元素信息的同时，建立附加的索引表。索引表中的每项称为索引项，索引项的形式通常是key-address，关键字--地址）
散列存储 （根据数据元素的关键字直接计算出数据元素的存储地址，又称为Hash存储，哈希存储）
PS：后三种统称为非顺序存储

绪论部分的理解重点：
（1）采用顺序存储，各个数据元素在物理位置上必须是连续的。采用非顺序存储，各个数据元素在物理位置上可以是离散的。
（2）数据的存储结构会影响到存储空间分配的方便程度
（3）数据的存储结构会影响对数据运算的速度

数据的运算：运算的定义与实现。运算的定义针对数据的逻辑结构，指出运算的功能。运算的实现针对数据的存储结构，指出运算的具体操作步骤。

3. 数据抽象与抽象数据类型
数据抽象使得程序设计者将数据元素间的逻辑关系和数据在计算机内的具体表示分开考虑。

抽象数据类型ADT是指一个数学模型以及定义在该模型上的一组操作。（数据类型是一个值的集合以及定义在该集合上的一组操作的总称）
ADT是一个数据类型，其主要特征是数据对象及其运算的规范独立于他们的实现，实行封装和信息隐蔽，使ADT的使用和实现分离。（定义逻辑结构->运算->存储结构）

ADT可以细分为三种类型：原子类型 固定聚合类型 可变聚合类型

（定义一个ADT就定义了一个数据结构，即确定了数据的逻辑结构以及数据的运算；确定一种存储结构即在计算机中表示逻辑结构，存储结构的不同会导致运算的具体实现不同。
确定存储结构才能真正实现一个数据结构）

4. 描述数据结构和算法

ADT的具体实现
ADT 抽象数据类型名{
数据对象：<数据对象的定义>D
数据关系：<数据关系的定义>S
基本操作：<基本操作的定义>P
}ADT 抽象数据类型名

描述运算：从语法和语义两个方面描述一个算法。
一方面使用C语言的函数原型规定该运算的使用格式，包括运算的名称，运算的输入参数，输出参数，返回值。
另一方面规定了使用一个运算应当满足的先决条件和运算执行后应有的结果，即运算的功能。

5. 算法分析的基本方法
算法中的基本操作被重复执行的次数是问题规模n的某个函数f(n) 
算法的时间度量（时间复杂度，大O记号）T(n) = O(f(n)) 表示随着问题规模n的增大，算法执行时间的增长率和f(n)的增长率相同，称为算法的时间复杂度（时间复杂度）
以空间复杂度作为算法所需储存空间的量度，称为S(n) = O(f(n))

语句的频度：某条语句被重复执行的次数。

几种情况下的时间复杂度：
最坏时间复杂度：在最坏情况下，算法的时间复杂度
最好时间复杂度：在最好情况下，算法的时间复杂度
平均时间复杂度：所有可能输入实例等概率出现的情况下，算法运行的时间

算法的原地工作（原地算法）：指算法所需要的辅助空间是常量。

常见的时间复杂度比较：
O(1) < O(log2n) < O(n) < O(nlog2n) < O(n2) < O(n3) < O(2的n次方) < O(n的n次方)

经典习题：
1、以下与数据的存储结构无关的术语是？
A：循环队列
B：链表
C：哈希表
D：栈

答案：D、栈
解析：其他三个答案都指出数据采用的存储结构，循环队列用的是顺序存储，链表用的是链式存储，哈希表用的是散列存储
这里的栈没有指明是顺序栈还是链式栈

2、以下程序段的时间复杂度（）
Count = 0;
for(k = 0;k <= n;k *= 2)
{
	for(j = 1;j < n;j++)
	{
		Count++;
	}
}
A: O(log2n)
B: O(二次根号n)
C: O(n)
D: O(nlog2n)

答案：D
解析：外层循环循环次数log2n次，内层循环循环n次，总的时间复杂度是二者的乘积，即nlog2n
*/
